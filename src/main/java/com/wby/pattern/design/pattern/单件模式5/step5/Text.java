package com.wby.pattern.design.pattern.单件模式5.step5;

/**
 * 1. 单件模式确保程序中一个类最多只有一个实例
 * 2. 单件模式提供访问这个实例的全局点
 * 3. java中实现单件模式需要私有的构造器,一个静态方法和一个静态变量
 * 4. 确定在性能和资源上的限制,然后小心的选择适当的方案来实现单件,以解决多线程的问题(我们必须认定所有的程序都是多线程的)
 * 5. 1.2版本之后,可以使用双重检查加锁
 * 6. 如果使用多个类加载器,可能导致单件失效而产生的多个实例
 * 7. 1.2版本之前,必须建立单件注册表,以免垃圾收集器将单件回收
 */
public class Text {
}
